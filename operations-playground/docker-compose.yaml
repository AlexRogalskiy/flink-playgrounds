version: "2.1"
services:
  client:
    build: ../docker/ops-playground-image
    image: apache/flink-ops-playground:1-FLINK-1.12-scala_2.11
    depends_on:
      - jobmanager
      - kafka
    command: "flink run -d /opt/DeliveryWriteFileJob.jar --bootstrap.servers kafka:9092 --checkpointing --event-time"
#    command: "flink run -p 3 -d /opt/DeliveryWriteFileJob.jar --bootstrap.servers kafka:9092 --checkpointing --event-time"
    volumes:
      - ./conf:/opt/flink/conf
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  # <editor-fold defaultstate="collapsed" desc="Aggregating relation">
  delivery-generator:
    image: apache/flink-ops-playground:1-FLINK-1.12-scala_2.11
    command: "java -classpath /opt/DeliveryWriteFileJob.jar:/opt/flink/lib/* org.apache.flink.playgrounds.ops.clickcount.DeliveryEventGenerator --bootstrap.servers kafka:9092 --topic input"
    depends_on:
      - kafka
  # </editor-fold>
  jobmanager:
    image: apache/flink:1.12.1-scala_2.11-java8
    command: "jobmanager.sh start-foreground"
    ports:
      - 8081:8081
    volumes:
      - ./conf:/opt/flink/conf
      - ./tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - ./tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - ./tmp/flink-output:/tmp/flink-output
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
    env_file:
      - ./hadoop.env
  taskmanager:
    image: apache/flink:1.12.1-scala_2.11-java8
    depends_on:
      - jobmanager
    command: "taskmanager.sh start-foreground"
    volumes:
      - ./conf:/opt/flink/conf
      - ./tmp/flink-checkpoints-directory:/tmp/flink-checkpoints-directory
      - ./tmp/flink-savepoints-directory:/tmp/flink-savepoints-directory
      - ./tmp/flink-output:/tmp/flink-output
    environment:
      - JOB_MANAGER_RPC_ADDRESS=jobmanager
  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
  kafka:
    image: wurstmeister/kafka:2.12-2.2.1
    environment:
      KAFKA_ADVERTISED_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENERS: INSIDE://:9092,OUTSIDE://:9094
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: INSIDE:PLAINTEXT,OUTSIDE:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: INSIDE
      KAFKA_CREATE_TOPICS: "input:2:1, output:2:1"
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
    ports:
      - 9094:9094
  namenode:
    image: bde2020/hadoop-namenode:2.0.0-hadoop3.2.1-java8
    container_name: namenode
    restart: always
    ports:
      - 9870:9870
      - 9000:9000
    volumes:
      - hadoop_namenode:/hadoop/dfs/name
    environment:
      - CLUSTER_NAME=test
    env_file:
      - ./hadoop.env
  datanode:
      image: bde2020/hadoop-datanode:2.0.0-hadoop3.2.1-java8
      container_name: datanode
      restart: always
      volumes:
        - hadoop_datanode:/hadoop/dfs/data
      environment:
        SERVICE_PRECONDITION: "namenode:9870"
      env_file:
        - ./hadoop.env
volumes:
  hadoop_namenode:
  hadoop_datanode: